package com.emailwriter.service;

import java.util.Map;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;

import com.emailwriter.Entity.EmailRequest;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

@Service
public class EmailService {
	
	private final WebClient webClient;
	
	public EmailService(WebClient webClient) {
		this.webClient = webClient;
	}

	@Value("${gemini.api.url}")
	private String geminiApiUrl;
	@Value("${gemini.api.key}")
	private String geminiApiKey;
	
	public String generateEmailReply(EmailRequest emailRequest)
	{
		
		
		//build the promt
		String prompt = buildPrompt(emailRequest);
		//create request
		Map<String, Object> requestBody = Map.of("contents" , new Object[] {
				Map.of("parts" , new Object[] {
						Map.of("text" , prompt)
				})
		}
				
		);
		//do request and get response
		String response = webClient.post()
				.uri(geminiApiUrl + geminiApiKey)
				.header("Content-Type", "application/json")
				.retrieve()
				.bodyToMono(String.class)
				.block();
		
		//return response
		return extractResponseContent(response);
		
		
	}

	private String extractResponseContent(String response) {
		try {
			ObjectMapper mapper = new ObjectMapper();
			JsonNode rootNode = mapper.readTree(response);
			return rootNode.path("candidates")
					.get(0)
					.path("content")
					.path("parts")
					.get(0)
					.path("text")
					.asText();
			
		} catch(Exception e)
		{
			return "Error Processing request : " + e.getMessage();
		}
		
	}

	private String buildPrompt(EmailRequest emailRequest) {
		StringBuilder prompt = new StringBuilder();
		prompt.append("Generate A professional reply for the following email content please dont generate subject line " );
		if(emailRequest.getTone() != null && !emailRequest.getTone().isEmpty()) {
			prompt.append("Use a ").append(emailRequest.getTone()).append(" tone.");
		}
		prompt.append("\nOriginal Email : \n" ).append(emailRequest.getEmailContent());
		return prompt.toString();
	}

}
